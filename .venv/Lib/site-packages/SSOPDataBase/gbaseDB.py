import os.path
from datetime import datetime
# sqlalchemy imports
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy import Column, Integer, String
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker,relationship, backref
from sqlalchemy.exc import IntegrityError
from sqlalchemy.sql.expression import except_
from sqlalchemy.sql.sqltypes import Boolean, Date, DateTime, Float
from sqlalchemy.ext.declarative import declarative_base
Base = declarative_base()



#%%
#SQL access layer initialization
BASE_DIR = os.path.dirname(os.path.abspath(__file__))
DATABASE_FILE = os.path.join(BASE_DIR, "database.sqlite")


if os.path.exists(DATABASE_FILE):

    print("\t database already exists")


engine = create_engine('sqlite:///%s'%(DATABASE_FILE), 
                       echo=False, 
                       connect_args={"check_same_thread": False}) 
                        #echo = True shows all SQL calls
                        


Session = sessionmaker(bind=engine)
session = Session() 