from gCentralComponentDB import Base, Column, DateTime
from gCentralComponentDB import Integer, Float 
from gCentralComponentDB import session

# Declaration of Measurement Table Table

class measurementData(Base):
    
    __tablename__ = 'Measurement Data'
    
    id = Column(Integer, primary_key=True)

    Meter_ID = Column(Integer)
    Measure_ID = Column(Integer)
    Timestamp = Column(DateTime)
    Type = Column(Integer)
    n_Phases = Column(Integer)
    Chanel = Column(Integer)
    Unit = Column(Integer)
    multi_Factor = Column(Integer)
    Measure_1 = Column(Float)
    Measure_2 = Column(Float)
    Measure_3 = Column(Float)



    def __repr__(self):
        return "<Gates(id = %d, name = %s)>" % (self.id,
                                                self.name)
    



#returns the list of the measurements data
def listMeasurementsData():
    print("here")
    return session.query(measurementData).all()

def listMDforID(id):
    return session.query(measurementData).filter(measurementData.id==id).first()

#Creates a new action (history) of an existent user
def newMeasurement(name):
    # Verify if the type of the arguments is correct
    if type(name) != str:
        return -1
    else: 
        meas = measurementData( name = "string")
        session.add(meas)
        try:
            session.commit()
        except:
            session.rollback()
            return -4

        print("here2")
        return 0


