"""
In this code, is developed the library in order to have a communication channel 
between the broker and the subscriber
"""

"""
Errors:
1-> To much arguments
2-> Message to big
3-> Couldn't decode the topic
2->
2->
2->
"""
import random
import sys
from paho.mqtt import client as mqtt_client

MAX_LEN_MESSAGE = 10000
MAX_N_OF_ARGUMENTS = 10
USERNAME = 'ola'       #Escolher username!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
PASSWORD = 'pedro'     #Escolher password!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
broker = 'broker.emqx.io'
port = 1883

#Connection to the online broker made available by spider??????????

def connect_mqtt(clientID) -> mqtt_client:
    def on_connect(client, userdata, flags, rc):
        if rc == 0:
            print("Connected to MQTT Broker!")
        else:
            print("Failed to connect, return code %d\n", rc)

    client = mqtt_client.Client(clientID)
    client.username_pw_set(USERNAME,PASSWORD)
    client.on_connect = on_connect
    client.connect(broker, port)
    return client

def recieveMessage(client: mqtt_client, topic, information):
    
    def on_message(client, userdata, msg):
        print(f"Received `{msg.payload.decode()}` from `{msg.topic}` topic")
        information['lastMessage'] = msg.payload.decode()
    
    client.subscribe(topic)
    client.on_message = on_message

#Function to test individually the subscribe code
def run():
    client = connect_mqtt()
    recieveMessage(client)
    client.loop_forever()


#Function of subscription by function 
def subscribe( topic, information, clientID,username=USERNAME, password=PASSWORD,):
    
    if len(information) > MAX_LEN_MESSAGE:
        exit(-2)

    try:
        splitTopic = topic.split('/', MAX_N_OF_ARGUMENTS)
    except:
        exit(-3)

    direction = splitTopic[0]
    clientID = f'python-mqtt-{random.randint(0, 100)}-{splitTopic[1]}'

    
    # generate client ID with pub prefix randomly

    client = connect_mqtt(clientID)
    recieveMessage(client, topic, information)
    client.loop_forever()


if __name__ == '__main__':
    
    if len(sys.argv) < 2:
        print("To few arguments")
        exit(-1)

    if len(sys.argv) > MAX_N_OF_ARGUMENTS:
        print("To many arguments")
        exit(-1)

    topic = sys.argv[1]
    splitTopic = topic.split('/',)
    direction = splitTopic[0]
    id = splitTopic[1]
    # generate client ID with pub prefix randomly
    clientID = f'python-mqtt-{random.randint(0, 100)}-{splitTopic[1]}'

    run()
    exit(0)
    
