"""
In this code, is developed the library in order to have a communication channel 
between the broker and the publisher
"""

"""
Errors:
1-> To much arguments
2-> Couldn't split arguments correctly
3-> The input in the main funciton is not a string
4-> Couldn't read the input
5-> To few arguments in the topic
"""

import sys
import time
import random
from paho.mqtt import client as mqtt_client

"""
Dúvidas ou observações.
->Querem criar um cliente ou eu crio um cliente sempre que publicam alguma coisa? linha 69
->
->
->
"""


MAX_N_OF_ARGUMENTS = 10
MAX_LEN_MESSAGE = 10000
USERNAME = 'olaa'       #Escolher username!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
PASSWORD = 'pedro'     #Escolher password!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
broker = 'broker.emqx.io'
port = 1883
# generate client ID with pub prefix randomly
    

def connect_mqtt(client_id):
    def on_connect(client, userdata, flags, rc):
        if rc == 0:
            print("Connected to MQTT Broker!")
        else:
            print("Failed to connect, return code %d\n", rc)

    client = mqtt_client.Client(client_id)
    client.username_pw_set(USERNAME, PASSWORD)
    client.on_connect = on_connect
    client.connect(broker, port)
    return client


def sendMessage(client,message,topic):

    result = client.publish(topic, message)
    # result: [0, 1]
    status = result[0]
    if status == 0:
        print(f"Send \n`{message}`\n to topic `{topic}`")
    else:
        print(f"Failed to send message to topic {topic}")


def publish(topic,message,client_id, username=USERNAME, password=PASSWORD):
    
    if len(message) > MAX_LEN_MESSAGE:
        exit(-2)

    try:
        splitTopic = topic.split('/', MAX_N_OF_ARGUMENTS)
    except:
        exit(-3)

    if len(splitTopic) < 2:
        print("To few arguments in the topic")
        exit(-5)

    direction = splitTopic[0]
    client_id = f'python-mqtt-{random.randint(0, 100)}-{splitTopic[1]}'

    if type(message) is not str:
        print("Input is not in the correct format: Must be a string")
        exit(-3)

    try:
        client_id = f'python-mqtt-{random.randint(0, 100)}-{splitTopic[1]}'
    except:
        print("Couldn't create Client! Exitting")
        exit(-4)

    
    client = connect_mqtt(client_id)
    sendMessage(client,message,topic)



    return 1

if __name__ == '__main__':
    


    if len(sys.argv) < 2:
        print("To few arguments")
        exit(-1)

    if len(sys.argv) > MAX_N_OF_ARGUMENTS:
        print("To many arguments")
        exit(-1)

    try:
        splitTopic = sys.argv[1].split('/',)
    except:
        print("Couldn't understand the input")
        exit(-2)

    direction = splitTopic[0]

    topic = sys.argv[1]
    
    publish("username", "password", "toAsset/123","something","client_id")